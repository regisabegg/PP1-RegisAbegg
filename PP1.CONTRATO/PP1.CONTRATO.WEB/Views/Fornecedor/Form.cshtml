@model PP1.CONTRATO.WEB.Models.Fornecedor.FornecedorVM
@using PP1.CONTRATO.WEB.Util

@{
    var action = Convert.ToString(ViewBag.Action);
    bool readOnly = Convert.ToBoolean(ViewBag.ReadOnly);

}

<hr />


<div class="form-layout">
    
        <div class="row">
            @if (action != "create")
            {
                <div class="col-lg-2">
                    <div class="form-group">
                        @Html.LabelFor(e => e.idFornecedor, new { @class = "form-control-label" })
                        @Html.TextBoxFor(e => e.idFornecedor, new { @class = "form-control", readOnly = "readonly" })
                    </div>
                </div>
            }
            <div class="col-lg-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.flTipo, new { @class = "form-control-label" })
                    @Html.DropDownListFor(model => model.flTipo, PP1.CONTRATO.WEB.Models.Fornecedor.FornecedorVM.Tipo, new { @class = "form-control select2" })
                    @Html.ValidationMessageFor(model => model.flTipo, null, new { @class = "text-danger" })
                </div>
            </div>
            @if (action != "create")
            {
                <div class="col-lg-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.flSituacao, new { @class = "form-control-label" })
                        @Html.DropDownListFor(model => model.flSituacao, PP1.CONTRATO.WEB.Models.Fornecedor.FornecedorVM.Situacao, new { @class = "form-control select2" })
                        @Html.ValidationMessageFor(model => model.flSituacao, null, new { @class = "text-danger" })
                    </div>
                </div>
            }
        </div>
   
</div>
<div class="form-layout juridica">
    <div class="row">
        <div class="col-lg-6">
            <div class="form-group ">
                @Html.LabelFor(e => e.nmFornecedor, "Razão Social", new { @class = "form-control-label" })
                @Html.TextBoxFor(model => model.nmFornecedor, new { @class = "form-control", maxlength = "100", @autofocus = "autofocus" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.nmFornecedor, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>
        <div class="col-lg-6">
            <div class="form-group">
                @Html.LabelFor(e => e.nmApelido, "Fantasia", new { @class = "form-control-label" })
                @Html.TextBoxFor(model => model.nmApelido, new { @class = "form-control", maxlength = "100", @autofocus = "autofocus" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.nmApelido, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>
    </div>
</div>

<div class="form-layout fisica">
    <div class="row">
        <div class="col-lg-6">
            <div class="form-group">
                @Html.LabelFor(e => e.nmFornecedor, "Fornecedor", new { @class = "form-control-label" })
                @Html.TextBoxFor(model => model.nmFornecedor, new { @class = "form-control", maxlength = "100", @autofocus = "autofocus" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.nmFornecedor, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>
        <div class="col-lg-6">
            <div class="form-group">
                @Html.LabelFor(e => e.nmApelido, "Apelido", new { @class = "form-control-label" })
                @Html.TextBoxFor(model => model.nmApelido, new { @class = "form-control", maxlength = "100", @autofocus = "autofocus" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.nmApelido, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>

    </div>
</div>


<h4><i class="fa fa-map-marker"></i> Endereço</h4>
<hr />

<div class="form-layout">
    <div class="row">
        <div class="col-lg-2">
            <div class="form-group ">
                @using (Html.BeginFormContainer(e => e.nrCEP))
                {
                    @Html.LabelFor(e => e.nrCEP, new { @class = "control-label " })
                    <div class="input-group" >
                        @Html.TextBoxFor(model => model.nrCEP, new { @class = "form-control", @mask = "99999-999", maxlength = "10" }.ReadOnlyIf(readOnly))
                        <div class="input-group-addon">
                            <i class="fa fa-search"  onclick="getCep()"></i>

                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="col-lg-8">
            <div class="form-group">
                @Html.LabelFor(e => e.nmLogradouro, new { @class = "form-control-label" })
                @Html.TextBoxFor(model => model.nmLogradouro, new { @class = "form-control", maxlength = "3" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.nmLogradouro, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>
        <div class="col-lg-2">
            <div class="form-group">
                @Html.LabelFor(e => e.nrNumero, new { @class = "form-control-label" })
                @Html.TextBoxFor(model => model.nrNumero, new { @class = "form-control", maxlength = "3" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.nrNumero, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>
    </div>
</div>

<div class="form-layout">
    <div class="row">
        <div class="col-lg-8">
            <div class="form-group">
                @Html.LabelFor(e => e.dsComplemento, new { @class = "form-control-label" })
                @Html.TextBoxFor(model => model.dsComplemento, new { @class = "form-control", maxlength = "3" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.dsComplemento, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>
        <div class="col-lg-4">
            <div class="form-group">
                @Html.LabelFor(e => e.nmBairro, new { @class = "form-control-label" })
                @Html.TextBoxFor(model => model.nmBairro, new { @class = "form-control", maxlength = "15" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.nmBairro, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>
    </div>
</div>

<div class="row">
    @Html.EditorFor(model => model.Estado, "Estado/Select", new { @Required = true, Disable = readOnly })
</div>

<h4 style="margin-top: 1rem"><i class="fa fa-phone-square"></i> Contato</h4>
<hr />

<div class="form-layout">
    <div class="row">
        <div class="col-lg-4">
            <div class="form-group">
                @Html.LabelFor(e => e.nrTelefone, new { @class = "form-control-label" })
                @Html.TextBoxFor(model => model.nrTelefone, new { @class = "form-control", @mask = "(99)9999-9999?9" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.nrTelefone, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>
        <div class="col-lg-4">
            <div class="form-group">
                @Html.LabelFor(e => e.nrCelular, new { @class = "form-control-label" })
                @Html.TextBoxFor(model => model.nrCelular, new { @class = "form-control", @mask = "(99)9999-9999?9" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.nrCelular, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>
        <div class="col-lg-4">
            <div class="form-group">
                @Html.LabelFor(e => e.dsEmail, new { @class = "form-control-label" })
                @Html.TextBoxFor(model => model.dsEmail, new { @class = "form-control", maxlength = "30" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.dsEmail, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>
    </div>
</div>


<div class="form-layout">
    <div class="row">
        <div class="col-lg-12">
            <div class="form-group juridica">
                @Html.LabelFor(e => e.dsSite, new { @class = "form-control-label" })
                @Html.TextBoxFor(model => model.dsSite, new { @class = "form-control", maxlength = "30" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.dsSite, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>
    </div>
</div>


<div class="form-layout juridica">
    <div class="row">
        <div class="col-lg-8">
            <div class="form-group">
                @Html.LabelFor(e => e.nmContato, new { @class = "form-control-label" })
                @Html.TextBoxFor(model => model.nmContato, new { @class = "form-control", maxlength = "50" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.nmContato, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>
        @*<div class="col-lg-4">
            <div class="form-group">
                @Html.LabelFor(model => model.flContato, new { @class = "form-control-label" })
                @Html.DropDownListFor(model => model.flContato, PP1.CONTRATO.WEB.Models.Fornecedor.FornecedorVM.Contato, new { @class = "form-control select2" })

            </div>
        </div>*@

        <div class="col-lg-3">
            <div class="form-group">
                @Html.LabelFor(model => model.flContato, new { @class = "form-control-label" })
                @Html.DropDownListFor(model => model.flContato, PP1.CONTRATO.WEB.Models.Fornecedor.FornecedorVM.Contato, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.flContato, null, new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>


<h4 style="margin-top: 1rem"><i class="fa fa-id-card"></i> Dados legais</h4>
<hr />

<div class="form-layout fisica">
    <div class="row">
        <div class="col-lg-4">
            <div class="form-group">
                @Html.LabelFor(e => e.nrDocumento, "CPF", new { @class = "form-control-label" })
                @Html.TextBoxFor(model => model.nrDocumento, new { @class = "form-control", @mask = "999.999.999-99" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.nrDocumento, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>
        <div class="col-lg-4">
            <div class="form-group">
                @Html.LabelFor(e => e.nrRegistro, "RG", new { @class = "form-control-label" })
                @Html.TextBoxFor(model => model.nrRegistro, new { @class = "form-control", maxlength = "15" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.nrRegistro, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>
    </div>
</div>

<div class="form-layout juridica">
    <div class="row">
        <div class="col-lg-4">
            <div class="form-group">
                @Html.LabelFor(e => e.nrDocumento, "CNPJ", new { @class = "form-control-label" })
                @Html.TextBoxFor(model => model.nrDocumento, new { @class = "form-control", @mask = "999.999.999-99" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.nrDocumento, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>
        <div class="col-lg-4">
            <div class="form-group">
                @Html.LabelFor(e => e.nrRegistro, "Ins. Estadual", new { @class = "form-control-label" })
                @Html.TextBoxFor(model => model.nrRegistro, new { @class = "form-control", maxlength = "15" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.nrRegistro, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>
    </div>
</div>


<h4 style="margin-top: 1rem"><i class="fa fa-info"></i> Informações</h4>
<hr />

<div class="form-layout">
    <div class="row">
        <div class="col-lg-12">
            <div class="form-group">
                @Html.LabelFor(e => e.dsObservacao, new { @class = "form-control-label" })
                @Html.TextAreaFor(model => model.dsObservacao, new { @class = "form-control", maxlength = "250" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.dsObservacao, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>

    </div>
</div>


@if (action != "create")
{
    <div class="form-layout">
        <div class="row mg-b-0">
            <div class="col-lg-2">
                <div class="form-group">
                    @Html.LabelFor(e => e.dtCadastro, new { @class = "form-control-label" })
                    @Html.TextBoxFor(e => e.dtCadastro, "{0:dd/MM/yyyy}", new { @class = "form-control", readOnly = "readonly" })
                </div>
            </div>
            <div class="col-lg-2">
                <div class="form-group">
                    @Html.LabelFor(e => e.dtAtualizacao, new { @class = "form-control-label" })
                    @Html.TextBoxFor(e => e.dtAtualizacao, "{0:dd/MM/yyyy}", new { @class = "form-control", readOnly = "readonly" })
                </div>
            </div>
        </div>
    </div>

}

<hr />
