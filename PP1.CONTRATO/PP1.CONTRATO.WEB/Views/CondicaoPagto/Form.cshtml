@model PP1.CONTRATO.WEB.Models.CondicaoPagto.CondicaoPagtoVM
@using PP1.CONTRATO.WEB.Util

@{
    var action = Convert.ToString(ViewBag.Action);
    bool readOnly = Convert.ToBoolean(ViewBag.ReadOnly);
    //var FormaPagto = new PP1.CONTRATO.WEB.Models.FormaPagto.ConsultaVM();

}

<hr />

@if (action != "create")
{
    <div class="form-layout">
        <div class="row">
            <div class="col-lg-2">
                <div class="form-group">
                    @Html.LabelFor(e => e.idPai, new { @class = "form-control-label" })
                    @Html.TextBoxFor(e => e.idPai, new { @class = "form-control", readOnly = "readonly" })
                </div>
            </div>
            <div class="col-lg-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.flSituacao, new { @class = "form-control-label" })
                    @Html.DropDownListFor(model => model.flSituacao, PP1.CONTRATO.WEB.Models.CondicaoPagto.CondicaoPagtoVM.Situacao, new { @class = "form-control select2" })
                    @Html.ValidationMessageFor(model => model.flSituacao, null, new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
}
<div class="form-layout ">
    <div class="row">
        <div class="col-lg-12">
            <div class="form-group ">
                @Html.LabelFor(e => e.nmCondicaoPagto, new { @class = "form-control-label" })
                @Html.TextBoxFor(model => model.nmCondicaoPagto, new { @class = "form-control", maxlength = "100", @autofocus = "autofocus" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.nmCondicaoPagto, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>
    </div>
</div>



<div class="form-layout">
    <div class="row">
        <div class="col-lg-3">
            <div class="form-group">
                @Html.LabelFor(e => e.txJuros, new { @class = "form-control-label" })
                @Html.TextBoxFor(model => model.txJuros, new { @class = "form-control taxa" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.txJuros, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>
        <div class="col-lg-3">
            <div class="form-group">
                @Html.LabelFor(e => e.txMulta, new { @class = "form-control-label" })
                @Html.TextBoxFor(model => model.txMulta, new { @class = "form-control taxa" }.ReadOnlyIf(readOnly))
                @Html.ValidationMessageFor(model => model.txMulta, null, new { @class = "text-danger" }.HideIf(readOnly))
            </div>
        </div>
    </div>
</div>



<h4><i class="fa fa-cc"></i> Pagamentos</h4>
<hr />

<div class="callout callout-primary">

    @if (action == "create" || action == "edit")
    {
        <div class="form-layout">
            <div class="row">
                @Html.EditorFor(model => model.FormaPagto, "FormaPagto/Select", new { @Required = true, Disable = readOnly })
            </div>

            <div class="row">
                <div class="col-lg-3">
                    <div class="form-group">
                        @Html.LabelFor(e => e.qtDias, new { @class = "form-control-label" })
                        @Html.TextBoxFor(model => model.qtDias, new { @class = "form-control integer" }.ReadOnlyIf(readOnly))
                        @Html.ValidationMessageFor(model => model.qtDias, null, new { @class = "text-danger" }.HideIf(readOnly))
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        @Html.LabelFor(e => e.txPercent, new { @class = "form-control-label" })
                        @Html.TextBoxFor(model => model.txPercent, new { @class = "form-control taxa" }.ReadOnlyIf(readOnly))
                        @Html.ValidationMessageFor(model => model.txPercent, null, new { @class = "text-danger" }.HideIf(readOnly))
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        @Html.Label("txTotPercent", "Total (%)", new { @class = "form-control-label" })
                        @Html.TextBox("txTotPercent", null, new { @class = "form-control taxa", readOnly = "readonly" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-1">
                    <div class="form-group">
                        @*@Html.Label("addItem", " ", new { @class = "form-control-label" })*@
                        <button id="addItem" type="button" class="btn btn-success"><i class="fa fa-plus"></i> Adicionar</button>
                    </div>
                </div>
                @if (action == "create" || action == "edit")
                {
                    <div class="col-lg-1">
                        <div class="form-group">
                            @*@Html.Label("addItem", " ", new { @class = "form-control-label" })*@
                            <button id="removeAll" type="button" class="btn btn-danger"><i class="fa fa-trash"></i> Remover Todos</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    <div class="table-wrapper">

        @Html.HiddenFor(model => model.Itens.js)
        @using (Html.BeginFormContainer(model => model.Itens))
        {
            <table id="tblItens" class=" table display responsive nowrap" style="width:100%">
                <thead>
                    <tr>
                        @*@if (action == "create" || action == "edit")
                            {
                                <th>
                                    <a class="btn btn-danger btn-sm" id="removeAll" title="Remover parcelas"><i class="fa fa-times"></i> </a>
                                </th>
                            }*@
                        <th class="note-icon-orderedlist" style="width:50px"></th>
                        <th class="wd-10p">Código</th>
                        <th class="wd-10p">Dias</th>
                        <th class="wd-10p">Percentual</th>
                        <th class="wd-70p">Forma Pagamento</th>
                    </tr>
                </thead>
            </table>
            @Html.ValidationMessageFor(model => model.Itens, null, new { @class = "help-block no-required" })
        }
    </div>
</div>



@if (action != "create")
{
    <div class="form-layout">
        <div class="row mg-b-0">
            <div class="col-lg-2">
                <div class="form-group">
                    @Html.LabelFor(e => e.dtCadastro, new { @class = "form-control-label" })
                    @Html.TextBoxFor(e => e.dtCadastro, "{0:dd/MM/yyyy}", new { @class = "form-control", readOnly = "readonly" })
                </div>
            </div>
            <div class="col-lg-2">
                <div class="form-group">
                    @Html.LabelFor(e => e.dtAtualizacao, new { @class = "form-control-label" })
                    @Html.TextBoxFor(e => e.dtAtualizacao, "{0:dd/MM/yyyy}", new { @class = "form-control", readOnly = "readonly" })
                </div>
            </div>
        </div>
    </div>

}

<hr />
